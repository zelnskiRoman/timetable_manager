import {Component, EventEmitter, Input, Output} from '@angular/core';import {IGroup, IDirection, IListItem, EditStyle, ILesson} from './utils/interfaces';import {HttpClient, HttpErrorResponse} from '@angular/common/http';@Component({  selector: 'app-univ-item',  templateUrl: './templates/university-item.component.html',  styleUrls: ['./styles/university-item.component.sass']})export class UniversityItemComponent implements IListItem {  @Input() directionData: IDirection;  @Input() isSelected: boolean;  @Input() editPanelStyle: EditStyle;  @Input() deleteUrl: string;  @Input() updateUrl: string;  @Output() itemDeleted = new EventEmitter<IDirection>();  showAddPanel: boolean;  showLoading = false;  editingStatus = false;  editedData: string;  constructor(    private httpClient: HttpClient  ) {    this.isSelected = false;  }  getTitle(): string {    return this.directionData.title;  }  getSubItems(): IGroup[] {    return this.directionData.groups;  }  onAddClick(): void {    this.showAddPanel = true;  }  deleteItem(): void {    this.showLoading = true;    this.httpClient.post(this.deleteUrl, JSON.stringify({id: this.directionData.id})).toPromise()      .then((res) => {        this.itemDeleted.emit(this.directionData);        this.showLoading = false;      })      .catch((err) => {        console.log(err);      });  }  onEditClick(): void {    this.editingStatus = true;  }  cancelEditing(): void {    this.editingStatus = false;  }  updateItem(): void {    if (this.directionData.title !== this.editedData) {      this.showLoading = true;      this.httpClient.post(this.updateUrl, JSON.stringify({id: this.directionData.id, title: this.editedData})).toPromise()        .then((res: IDirection) => {          this.directionData.title = res.title;          this.editingStatus = false;          this.showLoading = false;        })        .catch((err: HttpErrorResponse) => {          this.editingStatus = false;        });    }  }  inputHandler(input: HTMLInputElement): void {    this.editedData = input.value;  }  addTutorToLesson(_) {    return;  }}